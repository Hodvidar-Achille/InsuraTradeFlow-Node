services:
  mysql:
    image: mysql:8.0
    container_name: insuratradeflownode-mysql-v1
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: InsuraTradeFlowNode
      MYSQL_USER: InsuraTradeFlowUser
      MYSQL_PASSWORD: InsuraTradeFlowPassword
    ports:
      - "3307:3307"
    volumes:
      - mysql-data:/var/lib/mysql-node
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  backend:
    networks:
        - app-network
    hostname: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insuratradeflownode-backend-v1
    ports:
      - "5000:5000" # TODO change all call to port 8080 in the react app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      # Existing DB config
      DATABASE_URL: jdbc:mysql://mysql:3307/InsuraTradeFlowNode
      DATABASE_USER: InsuraTradeFlowUser
      DATABASE_PASSWORD: InsuraTradeFlowPassword
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      REACT_APP_API_URL: http://app:8080
    depends_on:
      app:
        condition: service_started
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: